SQL Queries for Atliq Exclusive Business Analysis

-- 1. Markets of Operation - APAC Region
SELECT DISTINCT(market)
FROM dim_customer
WHERE customer = "Atliq Exclusive" AND region = 'APAC';

-- 2. Percentage Increase in Unique Products (2021 vs. 2020)
WITH 2020_ AS (
    SELECT COUNT(DISTINCT(product_CODE)) AS UNIQUE_PRODUCT_2020
    FROM fact_sales_monthly
    WHERE fiscal_year = 2020
),
2021_ AS (
    SELECT COUNT(DISTINCT(product_CODE)) AS UNIQUE_PRODUCT_2021
    FROM fact_sales_monthly
    WHERE fiscal_year = 2021
)
SELECT UNIQUE_PRODUCT_2020, UNIQUE_PRODUCT_2021,
    ROUND(((UNIQUE_PRODUCT_2021 - UNIQUE_PRODUCT_2020) * 100 / UNIQUE_PRODUCT_2020), 1) AS percentage_Change
FROM 2020_, 2021_;

-- 3. Unique Product Count by Segment
SELECT segment, COUNT(DISTINCT(product_code)) AS product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;

-- 4. Segment with the Most Increase in Unique Products (2021 vs. 2020)
WITH fy20 AS (
    SELECT segment, COUNT(DISTINCT(p.product_code)) AS product_count_2020
    FROM dim_product p
    JOIN fact_sales_monthly f ON p.product_code = f.product_code
    WHERE fiscal_year = 2020
    GROUP BY p.segment
),
fy21 AS (
    SELECT segment, COUNT(DISTINCT(p.product_code)) AS product_count_2021
    FROM dim_product p
    JOIN fact_sales_monthly f ON p.product_code = f.product_code
    WHERE fiscal_year = 2021
    GROUP BY p.segment
)
SELECT F.segment, F.product_count_2020, U.product_count_2021,
    U.product_count_2021 - F.product_count_2020 AS difference
FROM fy20 F
JOIN fy21 U ON F.segment = U.segment
ORDER BY difference DESC;

-- 5. Products with Highest and Lowest Manufacturing Costs
SELECT m.product_code, product, CONCAT(manufacturing_cost, '/unit') AS manufacturing_cost 
FROM fact_manufacturing_cost AS m
JOIN dim_product AS p ON m.product_code = p.product_code
WHERE m.manufacturing_cost = (
    SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost
) OR m.manufacturing_cost = (
    SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost
)
ORDER BY manufacturing_cost DESC;

-- 6. Top 5 Customers with Highest Average Pre-Invoice Discounts (India, 2021)
SELECT c.customer_code, c.customer, f.pre_invoice_discount_pct * 100 AS average_discount_percentage
FROM dim_customer c
JOIN fact_pre_invoice_deductions f ON c.customer_code = f.customer_code
WHERE fiscal_year = 2021 AND c.market = 'India'
ORDER BY pre_invoice_discount_pct DESC
LIMIT 5;

-- 7. Gross Sales Amount for "Atliq Exclusive" by Month
WITH sales AS (
    SELECT date, fm.customer_code, fp.fiscal_year, gross_price * sold_quantity AS gross_sales
    FROM fact_gross_price fp
    JOIN fact_sales_monthly fm ON fm.product_code = fp.product_code AND fm.fiscal_year = fp.fiscal_year
),
customer AS (
    SELECT date, c.customer_code, gross_sales 
    FROM sales s
    JOIN dim_customer c ON s.customer_code = c.customer_code
    WHERE customer = 'Atliq Exclusive'
)
SELECT MONTH(date) AS Month, YEAR(date) AS Year, ROUND(SUM(gross_sales) / 1000000, 2) AS Gross_sales_Amount_mln 
FROM customer
GROUP BY Month, Year
ORDER BY Year, Month;

-- 8. Quarter with Maximum Total Sold Quantity (2020)
WITH quarter AS (
    SELECT sold_quantity,
        CASE
            WHEN MONTH(date) BETWEEN 9 AND 11 THEN 'Q1'
            WHEN MONTH(date) IN (12, 1, 2) THEN 'Q2'
            WHEN MONTH(date) BETWEEN 3 AND 5 THEN 'Q3'
            WHEN MONTH(date) BETWEEN 6 AND 8 THEN 'Q4'
        END AS Quarter
    FROM fact_sales_monthly
    WHERE fiscal_year = 2020
)
SELECT Quarter, SUM(sold_quantity) AS total_sold_quantity 
FROM quarter
GROUP BY Quarter
ORDER BY total_sold_quantity DESC;
